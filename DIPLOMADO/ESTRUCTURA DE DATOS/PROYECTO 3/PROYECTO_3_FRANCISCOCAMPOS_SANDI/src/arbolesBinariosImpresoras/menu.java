/*
UNIVERSIDAD ESTATAL A DISTANCIA
Curso:Estructuras de datos
Código: 0825
Proyecto #3: Gestión de Árbol Binario de Impresoras
Tutor:Steve Brenes Torres
Grupo:03
Estudiante: Francisco Campos Sandi
Cédula: 114750560
II Cuatrimestre 2024
 */
package arbolesBinariosImpresoras;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class menu extends javax.swing.JFrame {

    private ArbolBinarioBusqueda arbol;
    private grafico graficoWindow;

    public menu() {
        arbol = new ArbolBinarioBusqueda();  // Inicializa el árbol 
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        panelFondo backgroundPanel = new panelFondo();
        setContentPane(backgroundPanel);
        backgroundPanel.setLayout(null);  
        backgroundPanel.add(jPanel1);
        jPanel1.setBounds(10, 10, jPanel1.getPreferredSize().width, jPanel1.getPreferredSize().height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Inse = new javax.swing.JMenu();
        Inser = new javax.swing.JMenuItem();
        recorrido = new javax.swing.JMenuItem();
        buscar = new javax.swing.JMenuItem();
        dibujar = new javax.swing.JMenuItem();
        eliminar = new javax.swing.JMenuItem();

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Inse.setText("Inicio");
        Inse.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Inse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InseActionPerformed(evt);
            }
        });

        Inser.setText("Insertar");
        Inser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InserActionPerformed(evt);
            }
        });
        Inse.add(Inser);

        recorrido.setText("Recorrido");
        recorrido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recorridoActionPerformed(evt);
            }
        });
        Inse.add(recorrido);

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        Inse.add(buscar);

        dibujar.setText("Dibujar árbol");
        dibujar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dibujarActionPerformed(evt);
            }
        });
        Inse.add(dibujar);

        eliminar.setText("Eliminnar ");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        Inse.add(eliminar);

        jMenuBar1.add(Inse);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(524, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(330, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dibujarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dibujarActionPerformed
        // Verifica si el árbol está vacío
        if (arbol.getRaiz() == null) {
            JOptionPane.showMessageDialog(this, "El árbol está vacío. No se puede mostrar el gráfico.", "Árbol vacío", JOptionPane.WARNING_MESSAGE);
            return; // No crea la ventana si el árbol está vacío
        }

        // Crea la ventana de gráfico y la inicializa con el árbol
        if (graficoWindow == null) {
            graficoWindow = new grafico(arbol);
        }
        graficoWindow.setLocationRelativeTo(this);
        graficoWindow.setVisible(true);

    }//GEN-LAST:event_dibujarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // Verifica si el árbol está vacío
        if (arbol.getRaiz() == null) {
            JOptionPane.showMessageDialog(this, "El árbol está vacío. No se puede eliminar ningún nodo.", "Árbol vacío", JOptionPane.WARNING_MESSAGE);
            return; // No crea la ventana si el árbol está vacío
        }

        // Verifica si la ventana de gráfico ya está abierta
        if (graficoWindow != null) {
            eliminar eliminarWindow = new eliminar(arbol, graficoWindow.getArbolPanel());
            eliminarWindow.setLocationRelativeTo(this);
            eliminarWindow.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Primero debes dibujar el árbol.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // Verifica si el árbol está vacío
        if (arbol.getRaiz() == null) {
            JOptionPane.showMessageDialog(this, "El árbol está vacío. No se puede realizar la búsqueda.", "Árbol vacío", JOptionPane.WARNING_MESSAGE);
            return; 
        }

        // Crea la ventana de búsqueda y la inicializa con el árbol
        buscar form = new buscar(arbol);
        form.setLocationRelativeTo(this);
        form.setVisible(true);
    }//GEN-LAST:event_buscarActionPerformed

    private void recorridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recorridoActionPerformed
        // Verifica si el árbol está vacío
        if (arbol.getRaiz() == null) {
            JOptionPane.showMessageDialog(this, "El árbol está vacío. No se puede realizar el recorrido.", "Árbol vacío", JOptionPane.WARNING_MESSAGE);
            return; 
        }

        // Crea la ventana de recorrido y la inicializa con el árbol
        recorrido form = new recorrido();
        form.setArbol(arbol);  // Establece el árbol para la ventana de recorrido
        form.setLocationRelativeTo(this);
        form.setVisible(true);
    }//GEN-LAST:event_recorridoActionPerformed

    private void InseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InseActionPerformed

    }//GEN-LAST:event_InseActionPerformed

    private void InserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InserActionPerformed
        if (graficoWindow == null) {  
            graficoWindow = new grafico(arbol);
        }
        insertar form = new insertar(this, true, arbol, graficoWindow);  // Pasa el objeto graficoWindow
        form.setLocationRelativeTo(this);
        form.setVisible(true);

    }//GEN-LAST:event_InserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(() -> {
            new menu().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Inse;
    private javax.swing.JMenuItem Inser;
    private javax.swing.JMenuItem buscar;
    private javax.swing.JMenuItem dibujar;
    private javax.swing.JMenuItem eliminar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JMenuItem recorrido;
    // End of variables declaration//GEN-END:variables
}
