package arbolesBinariosImpresoras;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class eliminar extends javax.swing.JFrame {

    private ArbolBinarioBusqueda arbol;
    private ArbolPanel arbolPanel;
    private boolean eliminadoRecientemente = false;

    public eliminar(ArbolBinarioBusqueda arbol, ArbolPanel arbolPanel) {
        setTitle("Eliminar");
        this.arbol = arbol;
        this.arbolPanel = arbolPanel;
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(173,216,230));//color de fondo

    }

    private void eliminar() {
        // Solo muestra el mensaje de campo vacío si no se ha realizado una eliminación reciente
        if (IDN.getText().isEmpty()) {
            if (!eliminadoRecientemente) {
                JOptionPane.showMessageDialog(this, "El campo ID no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            return;
        }

        try {
            // Obtien el ID del campo de texto
            String idText = IDN.getText();

            // Convierte el ID a un número entero
            int id;
            try {
                id = Integer.parseInt(idText);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor, ingresa un ID válido.", "Error", JOptionPane.ERROR_MESSAGE);
                IDN.setText(""); // Limpia el campo de texto
                eliminadoRecientemente = false; // Restablece la variable de estado
                return;
            }

            // Verifica si el nodo con el ID existe en el árbol
            Impresora impresora = arbol.buscar(id);
            if (impresora == null) {
                JOptionPane.showMessageDialog(this, "El ID " + id + " no existe en el árbol.", "Error", JOptionPane.ERROR_MESSAGE);
                IDN.setText(""); // Limpia el campo de texto
                eliminadoRecientemente = false; // Restablece la variable de estado
                return;
            }

            // Confirmación antes de eliminar
            int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar el ID: " + id + "?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Elimina el elemento del árbol y obtiene el mensaje de estado
                String mensaje = arbol.eliminar(id);

                // Verifica el mensaje de eliminación
                if (mensaje.contains("No se puede eliminar el nodo porque tiene dos hijos")) {
                    JOptionPane.showMessageDialog(this, mensaje, "Resultado de Eliminación", JOptionPane.INFORMATION_MESSAGE);
                } else if (mensaje.contains("Nodo eliminado correctamente")) {
                    JOptionPane.showMessageDialog(this, mensaje, "Resultado de Eliminación", JOptionPane.INFORMATION_MESSAGE);
                }

                // Actualiza la vista del árbol
                if (arbolPanel != null) {
                    arbolPanel.actualizarArbol(arbol.getRaiz());
                    arbolPanel.repaint();
                }

                // Limpia el campo de texto
                IDN.setText("");
                eliminadoRecientemente = true; // Marca que se ha realizado una eliminación
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ID = new javax.swing.JLabel();
        IDN = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        eliminarId = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ID.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        ID.setText("ID");

        IDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDNActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Eliminar Impresoras");

        eliminarId.setText("Eliminar");
        eliminarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(eliminarId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(391, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(178, 178, 178))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(71, 71, 71)
                    .addComponent(IDN, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(518, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addComponent(eliminarId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(217, 217, 217)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IDN, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ID))
                    .addContainerGap(44, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDNActionPerformed

    private void eliminarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarIdActionPerformed
        eliminar();
    }//GEN-LAST:event_eliminarIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(eliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new eliminar(new ArbolBinarioBusqueda(), new ArbolPanel(null)).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID;
    private javax.swing.JTextField IDN;
    private javax.swing.JButton eliminarId;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
