package arbolesBinariosImpresoras;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class grafico extends javax.swing.JFrame {

    private ArbolBinarioBusqueda arbol;
    private ArbolPanel arbolPanel;

    public ArbolPanel getArbolPanel() {
        return arbolPanel;  // Retorna el panel del árbol
    }

    public grafico(ArbolBinarioBusqueda arbol) {
        setTitle("Mostrar Árbol");
        this.arbol = arbol;
        initComponents();
        arbolPanel = new ArbolPanel(arbol.getRaiz()); // Inicializa ArbolPanel con la raíz del árbol
        panelArbol.setLayout(new java.awt.BorderLayout());
        panelArbol.add(arbolPanel, java.awt.BorderLayout.CENTER);
        actualizarGrafico(); // Inicializa la vista del gráfico
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        this.getContentPane().setBackground(new Color(173,216,230));//color de fondo
    }

    // Método para actualizar el gráfico del árbol
    public void actualizarGrafico() {
        if (arbolPanel != null) {
            arbolPanel.actualizarArbol(arbol.getRaiz());
            arbolPanel.repaint();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelArbol = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelArbolLayout = new javax.swing.GroupLayout(panelArbol);
        panelArbol.setLayout(panelArbolLayout);
        panelArbolLayout.setHorizontalGroup(
            panelArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelArbolLayout.setVerticalGroup(
            panelArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 621, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Gráfico del árbol binario de impresoras");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel1)
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelArbol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(132, 132, 132)
                .addComponent(panelArbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(() -> {
            ArbolBinarioBusqueda arbol = new ArbolBinarioBusqueda();

            // Verificar si el árbol está vacío antes de crear la ventana
            if (arbol.getRaiz() == null) {
                JOptionPane.showMessageDialog(null, "El árbol está vacío. No se puede mostrar el gráfico.", "Árbol vacío", JOptionPane.WARNING_MESSAGE);
            } else {
                grafico graficoWindow = new grafico(arbol);
                graficoWindow.setVisible(true); // Solo hacer visible si el árbol no está vacío
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelArbol;
    // End of variables declaration//GEN-END:variables
}
